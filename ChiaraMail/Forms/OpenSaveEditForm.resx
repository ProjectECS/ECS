<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>